name: Build EXE

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest  # Use a Windows runner to build the .exe

    steps:
    # Step 1: Check out the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'  # Specify the Python version you need

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    # Step 4: Build the EXE
    - name: Build EXE
      run: |
        build.bat

    # Step 5: Upload the EXE as an artifact
    - name: Upload EXE
      uses: actions/upload-artifact@v3
      with:
        name: usdxfixgap-exe
        path: dist/usdxfixgap.exe