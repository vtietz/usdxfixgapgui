name: Build and Publish Multi-Platform Releases

on:
  workflow_dispatch:  # Allow manual triggering of the workflow

jobs:
  build-windows:
    permissions: write-all
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt
          
      - name: Build Windows EXE
        shell: cmd
        run: build.bat
        
      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-exe
          path: dist/usdxfixgap.exe

  build-linux:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt
          
      - name: Make build script executable
        run: chmod +x build_linux.sh
        
      - name: Build Linux Executable
        run: ./build_linux.sh
        
      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-exe
          path: dist/usdxfixgap

  release:
    needs: [build-windows, build-linux]
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-exe
          path: ./windows
          
      - name: Download Linux Artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-exe
          path: ./linux
                    
      - name: Create Tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          VERSION=$(cat VERSION)
          TAG_NAME="${VERSION}-$(date +'%Y%m%d%H%M%S')"
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
          git tag -a ${TAG_NAME} -m "Release ${TAG_NAME}"
          git push origin ${TAG_NAME}
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload Windows Executable
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows/usdxfixgap.exe
          asset_name: usdxfixgap-windows.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload Linux Executable
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux/usdxfixgap
          asset_name: usdxfixgap-linux
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          