name: Build EXE and Publish Release

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
  workflow_dispatch:  # Allow manual triggering of the workflow

jobs:
  build:
    permissions: write-all
    runs-on: windows-latest  # Use a Windows runner to build the .exe

    steps:
    # Step 1: Check out the code
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'  # Specify the Python version you need

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    # Step 4: Build the EXE
    - name: Build EXE
      shell: cmd
      run: build.bat

    # Step 5: Create a GitHub Release
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.sha }}  # Use the commit SHA as the tag name
        release_name: Build ${{ github.sha }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Step 6: Upload the EXE to the Release
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/usdxfixgap.exe  # Path to the generated EXE
        asset_name: usdxfixgap.exe
        asset_content_type: application/octet-stream